package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import domain.ResultadoMenuAdmin;
import domain.Usuario;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.*;
import java.util.Locale;

public class MenuAdminDialog extends JDialog {
    private JPanel contentPane;
    private JButton botonConfigurarUmbrales;
    private JButton botonABM;
    private JButton botonCambiarPrecio;
    private JButton botonCerrarSesion;
    private JLabel textoBienvenida;
    private JButton botonSalir;
    private JButton botonReporte;
    private JLabel textoSeleccion;

    private ResultadoMenuAdmin resultado = ResultadoMenuAdmin.CERRADO_VENTANA;

    public MenuAdminDialog(Window owner, Usuario usuario) {
        super(owner, "Librería Yenny — Menú Administrador", ModalityType.APPLICATION_MODAL);
        $$$setupUI$$$();
        setContentPane(contentPane);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        if (textoBienvenida != null) textoBienvenida.setText("Bienvenido/a " + usuario.getNombre());
        if (textoSeleccion != null) textoSeleccion.setText("Seleccione una de las siguientes opciones");

        if (botonABM != null) botonABM.addActionListener(e -> elegir(ResultadoMenuAdmin.ABM_LIBROS));
        if (botonCambiarPrecio != null) botonCambiarPrecio.addActionListener(e -> elegir(ResultadoMenuAdmin.CAMBIAR_PRECIOS));
        if (botonConfigurarUmbrales != null)
            botonConfigurarUmbrales.addActionListener(e -> elegir(ResultadoMenuAdmin.CONFIGURAR_UMBRALES));
        if (botonReporte != null) botonReporte.addActionListener(e -> elegir(ResultadoMenuAdmin.REPORTE_QUINCENAL));
        if (botonCerrarSesion != null) botonCerrarSesion.addActionListener(e -> elegir(ResultadoMenuAdmin.CERRAR_SESION));
        if (botonSalir != null) botonSalir.addActionListener(e -> elegir(ResultadoMenuAdmin.SALIR_SISTEMA));

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                elegir(ResultadoMenuAdmin.CERRADO_VENTANA);
            }
        });
        contentPane.registerKeyboardAction(
                e -> elegir(ResultadoMenuAdmin.CERRADO_VENTANA),
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );

        pack();
        setLocationRelativeTo(owner);
    }

    private void elegir(ResultadoMenuAdmin r) {
        resultado = r;
        dispose();
    }

    public ResultadoMenuAdmin showDialog() {
        setVisible(true);
        return resultado;
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(4, 1, new Insets(10, 10, 10, 10), -1, -1));
        contentPane.setBackground(new Color(-1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-1));
        contentPane.add(panel1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        botonABM = new JButton();
        botonABM.setAutoscrolls(false);
        botonABM.setBackground(new Color(-1));
        botonABM.setForeground(new Color(-16579837));
        botonABM.setText("ABM de libros");
        panel1.add(botonABM, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botonCambiarPrecio = new JButton();
        botonCambiarPrecio.setBackground(new Color(-1));
        botonCambiarPrecio.setForeground(new Color(-16579837));
        botonCambiarPrecio.setText("Cambiar precios");
        panel1.add(botonCambiarPrecio, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botonConfigurarUmbrales = new JButton();
        botonConfigurarUmbrales.setBackground(new Color(-1));
        botonConfigurarUmbrales.setForeground(new Color(-16579837));
        botonConfigurarUmbrales.setText("Configurar umbrales");
        panel1.add(botonConfigurarUmbrales, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel2.setBackground(new Color(-1));
        contentPane.add(panel2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        botonReporte = new JButton();
        botonReporte.setBackground(new Color(-1));
        botonReporte.setForeground(new Color(-16579837));
        botonReporte.setText("Reporte quincenal");
        panel2.add(botonReporte, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botonCerrarSesion = new JButton();
        botonCerrarSesion.setBackground(new Color(-16579837));
        botonCerrarSesion.setForeground(new Color(-1217958));
        botonCerrarSesion.setText("Cerrar sesión");
        panel2.add(botonCerrarSesion, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botonSalir = new JButton();
        botonSalir.setBackground(new Color(-16579837));
        botonSalir.setForeground(new Color(-1217958));
        botonSalir.setText("Salir del sistema");
        panel2.add(botonSalir, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel3.setBackground(new Color(-1));
        contentPane.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));
        textoBienvenida = new JLabel();
        Font textoBienvenidaFont = this.$$$getFont$$$("Lucida Grande", Font.BOLD, 28, textoBienvenida.getFont());
        if (textoBienvenidaFont != null) textoBienvenida.setFont(textoBienvenidaFont);
        textoBienvenida.setForeground(new Color(-16579837));
        textoBienvenida.setHorizontalAlignment(0);
        textoBienvenida.setHorizontalTextPosition(0);
        textoBienvenida.setRequestFocusEnabled(false);
        textoBienvenida.setText("Bienvenido nombre");
        panel3.add(textoBienvenida, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel3.add(spacer1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textoSeleccion = new JLabel();
        textoSeleccion.setForeground(new Color(-10394518));
        textoSeleccion.setText("Seleccione una de las siguientes opciones");
        panel3.add(textoSeleccion, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        separator1.setAutoscrolls(true);
        contentPane.add(separator1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
